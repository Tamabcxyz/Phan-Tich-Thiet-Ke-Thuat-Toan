/*
Doc file binh thuong va ghi file binh thuong


*/

#include <stdio.h>
#include <conio.h>

typedef int keytype;
typedef float othertype;
typedef struct {
	keytype key;
//	othertype otherfields;
}recordtype;

void Swap(recordtype &x, recordtype &y){
	recordtype tmp;
	tmp = x;
	x = y;
	y = tmp;
}

void Selection(recordtype a[], int n){
	int i, j, lowindex;
	keytype lowkey;
	recordtype tmp;
	for (i=0;i<=n-2;i++){
		lowkey = a[i].key;
		lowindex = i;
		for (j=i+1;j<=n-1;j++)
			if (a[j].key<lowkey){
				lowkey = a[j].key;
				lowindex = j;
			}
		Swap(a[i],a[lowindex]);
	}
}

void InsertSort(recordtype a[], int n){
	int i,j;
	for(i=1; i<=n-1; i++){
		j=i;
		while ((j>0)&&(a[j].key<a[j-1].key)) {
			Swap(a[j],a[j-1]);
 			j--;
     	}
  	}
}

void BubbleSort(recordtype a[], int n){
	int i,j;
	for(i= 0; i<= n-2; i++)
		for(j=n-1;j>=i+1; j--)
			if (a[j].key < a[j-1].key)
				   Swap(a[j],a[j-1]);
}


void PRINT_LIST(recordtype a[], int n){
	for (int i=0;i<n;i++){
		printf("%d ",a[i].key);
	}
}

void luuds(recordtype a[], int n, FILE *fc){
	if (fc==NULL)
	{
		printf("Can't open file!");
	} else
	for (int i=0;i<n;i++)
	fprintf(fc,"%d\t",a[i].key);
}

int docds(recordtype a[], FILE *fb){
	int n;
	fscanf(fb,"%d",&n);
	for (int i=0;i<n;i++){
		fscanf(fb,"%d",&a[i].key);
	}
	return n;
}

int FindPivot(recordtype a[], int i,int j){
	keytype firstkey;
	int k=i+1;
	firstkey=a[i].key;
	while(k<=j&&a[k].key==firstkey)k++;
	if(k>j)return -1;
	if(a[k].key>firstkey)return k;
	return i;
}
int Patition(recordtype a[],int i,int j,keytype pivot){
	int L,R;
	L=i;R=j;
	while(L<=R){
		while(a[L].key<pivot)L++;
		while(a[R].key>=pivot)R--;
		if(L<R) Swap(a[L],a[R]);
	}return L;
}
int Quicksort(recordtype a[],int i,int j){
	keytype pivot;
	int pivotindex,k;
	pivotindex=FindPivot(a,i,j);
	if(pivotindex!=-1){
		pivot=a[pivotindex].key;
		k=Patition(a,i,j,pivot);
		Quicksort(a,i,k-1);
		Quicksort(a,k,j);
	}
}
void PushDown(recordtype a[], int first, int last){
	int r=first;
	while(r<=(last-1)/2){
		if(last==2*r+1){
			if(a[r].key>a[last].key)Swap(a[r],a[last]);
			r=last;
		}else{
			if((a[r].key>a[2*r+1].key)&&a[2*r+1].key<=a[2*r+2].key){
				Swap(a[r],a[2*r+1]);
				r=2*r+1;
			}else{
				if((a[r].key>a[2*r+2].key)&&a[2*r+2].key<=a[2*r+1].key){
					Swap(a[r],a[2*r+2]);
					r=2*r+2;
				}else{
					r=last;
				}
			}
		}
	}
}
void HeapSort(recordtype a[], int n){
	int i;
	for(i=(n-2)/2;i>=0;i--){
		PushDown(a,i,n);
	}
	for(i=n-1;i>=2;i--){
		Swap(a[0],a[i]);
		PushDown(a,0,i-1);
	}
	Swap(a[0],a[1]);
}
int main(){
	int n, tmp;
	recordtype a[100];
	FILE *fb, *fc;
	fb=fopen("Doc.txt","r");
	fc=fopen("Ketqua.txt","w");
	/*
	printf("Nhap vao n= ");
	scanf("%d",&n);
	
	for (int i=0;i<n;i++){
		printf("Nhap vao a[%d]: ",i);
		scanf("%d",&a[i].key);
	}
	*/
	if (fb!=NULL)
	n=docds(a,fb);
	
	//PRINT_LIST(a,n);
	printf("\n");
	Selection(a,n);
	//InsertSort(a,n);
	//BubbleSort(a,n);
	//Quicksort(a,0,n);
	//PRINT_LIST(a,n);
	HeapSort(a,n);
	if (n>0 && fc!=NULL)
	{
		luuds(a,n,fc);
		printf("Da ghi ra file");
	}
	fclose(fc);
	fclose(fb);
	getch();
	return 0;
}
